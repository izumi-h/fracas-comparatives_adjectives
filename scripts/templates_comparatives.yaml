# Semantic Lexicon for comparatives

# Type T ::= Entity | Degree | Prop | T1 -> T2

# Variable     Type
# x,y,z,x1,x2  Entity, E
# d,d1,d2      Degree, D
# A            D -> E -> Prop
# F,G,F1,F2    E -> Prop
# K,K1,K2      Ev -> Prop
# Q,Q1,Q2      (E -> Prop) -> Prop (= NP*)
# S,S1,S2      (Ev -> Prop) -> Prop (= S*)
# E            expression (lemma)

# Constant          Type
# arg0,arg1,arg2    Event -> Entity

##### Unary lexical rule #####

- category: (S\NP)\((S\NP)/NP)
  rule: lex
  semantics: \E F z. exists x. (E(x) & F(\P. P(x),z))
  child0_category: N

- category: NP\(NP/N)
  rule: lex
  semantics: \E K F. exists x. (E(x) & F(x) & K(x))
  child0_category: N

- category: N\(S\NP)
  rule: lex
  semantics: \E A x. (A(x) & E(x))
  child0_category: N

- category: NP/N
  rule: lex
  semantics: \E F z. exists x. (E(x) & F(\P. P(x),z))
  child0_category: N

- category: NP/N
  rule: lex
  semantics: \E x. _many(x,E)
  child0_category: D

## type raising ##
- category: S/(S\NP)
  semantics: \E P. P(E) 
  child0_category: NP


##### Binary lexical rule #####

- category: (NP/N)/((NP/N)\D)
  semantics: \L R N F. all d. exists x.(N(x) & F(x) & (_many(x,d) <-> (d = R)))
  child0_surf: exactly
  child1_category: D

## at least ##
- category: D/D
  semantics: \L R X. X
  child0_surf: at
  child1_surf: least

## the + N ##
- category: NP
  semantics: \L R. R 
  child0_surf: the
  child1_category: N
  

### Semantic templates ###

### Nouns ###

## proper nouns ##

- category: S/(S\NP)
  semantics: \E P. P(E)

## common nouns ##

- category: N
  semantics: \E. E

#- category: N
#  semantics: \E x. E(x)


### empty categories ###

- category: (S\NP)/((S\NP)\D)
  semantics: \E A x. (A(_th(_u))(x))
  surf: pos

- category: (S\NP)/((S\NP)\D)
  semantics: \E A x. (A(_np(_u,_th(_u)))(x))
  surf: pos2

- category: (N/N)/((S\NP)\D)
  semantics: \E A N x. (A(_np(_u,_th(_u)),x) & N(x))
  surf: pos

- category: (N/N)/((S\NP)\D)
  semantics: \E A N x. (A(_th(N))(x) & N(x))
  surf: pos2

- category: (N/N)/((S\NP)\D)
  semantics: \E A N x. (A(_np(N,_th(N)),x) & N(x))
  surf: pos3


### infiections for comparatives ###

## -er_simp ##

# for extensional adjectives #
- category: ((S\NP)/(S/(S\NP)))\((S\NP)\D)
  semantics: \E A Q x. exists d.(A(d)(x) & -Q(A(d)))
  surf: er

# for intensional adjectives #
- category: ((S\NP)/(S/(S\NP)))\((S\NP)\D)
  semantics: \E A Q x. exists d.(A(_np(_u,d))(x) & -Q(A(_np(_u,d))))
  surf: er2
  

## -er_mea ##

# positive adjectives #
- category: ((S\NP)/D)\((S\NP)\D)
  semantics: \E A q x. exists d.(A(d)(x) & ($less(q,d)))
  surf: er

# negative adjectives #
- category: ((S\NP)/D)\((S\NP)\D)
  semantics: \E A q x. exists d.(A(d)(x) & ($less(d,q)))
  surf: er2

## -er_diff ##

- category: ((S\NP)/((S/(S\NP))\D))\((S\NP)\D)
  semantics: \E A q Q x. all d.(Q(A($difference(d,q))) -> A(d)(x))
  surf: er

## extensional comparison class ##
- category: ((N/(S/(S\NP)))/N)\((S\NP)\D)
  semantics: \E A N Q x. (N(x) & Q(N) & exists d.(A(d,x) & -Q(A(d))))
  surf: er

## intensional comparison class ##
- category: ((N/(S/(S\NP)))/N)\((S\NP)\D)
  semantics: \E A N Q x. (N(x) & Q(N) & exists d.(A(_np(N,d),x) & -Q(A(_np(N,d)))))
  surf: er2

- category: ((((S\NP)\(S/(S\NP)))\((S\NP)/NP))/N)/((NP/N)\D)
  semantics: \E F N G Q z. all d.(exists y.(N(y) & Q(G(\P.P(y))) & F(d,y)) -> exists x. (N(x) & G(\P.P(x),z) & F(d,x)))

- category: (((((S\NP)\(S/(S\NP)))\((S\NP)/NP))/N)/((NP/N)\D))\D
  semantics: \E D F N G Q z. all d.(exists y.(N(y) & Q(G(\P.P(y))) & F(d,y)) -> exists x. (N(x) & G(\P.P(x),z) & F(D(d),x)))

- category: (((S\NP)/(S/(S\NP)))\((S\NP)/NP))/N
  semantics: \E N G Q z. exists d. (exists x.(N(x) & G(\P.P(x),z) & _many(x,d)) & -exists y.(N(y) & Q(G(\P.P(y))) & _many(y,d)))
  surf: more

- category: (((S\NP)/(S/NP))\((S\NP)/NP))/N
  semantics: \E N G R z. exists d. (exists x.(N(x) & G(\P.P(x),z) & _many(x,d)) & -exists y.(N(y) & R(\X. X(y)) & _many(y,d)))
  surf: more

- category: ((((S\NP)/(S/(S\NP)))\((S\NP)/NP))\D)/N
  semantics: \E N c G Q z. all d. (exists x. (N(x) & Q(G(\P.P(x))) & _many(x,d)) -> exists y. (N(y) & G(\P.P(y),z) & _many(y,$sum(d,c))))
  surf: more

- category: ((((S\NP)/(S/(S\NP)))\((S\NP)/NP))/N)/((S\NP)\D)
  semantics: \E A N G Q z. exists d. (exists x. (N(x) & G(\P. P(x),z) & A(d,x)) & -exists y. (N(y) & Q(G(\P. P(y))) & A(d,y)))
  surf: more

- category: ((((S\NP)/(S/(S\NP)))\((S\NP)/NP))/N)/((S\NP)\D)
  semantics: \E A N G Q z. exists d. (exists x. (N(x) & G(\P. P(x),z) & A(d,x)) & -Q(\y. (N(y) & A(d,y))))
  surf: more2

- category: ((((S\NP)/(S/NP))\((S\NP)/NP))/N)/((S\NP)\D)
  semantics: \E A N G R z.exists d.(exists x.(N(x) & G(\P.P(x),z) & A(d,x)) & -exists y.(N(y) & R(\X.X(y)) & A(d,y)))
  surf: more

### comparative conjunction ###

## than_simp ##
- category: S/S
  semantics: \E X. X
  surf: than

## than_deg ##
- category: D/D
  semantics: \E X. X
  surf: than

## than_gq ##
- category: ((S\NP)\((S\NP)/(S/(S\NP))))/(S/(S\NP))
  semantics: \E Q W x. Q(\y. W(\P.P(y),x))
  surf: than 

## as_simp ##
- category: ((S\NP)/(S/(S\NP)))/((S\NP)\D)
  semantics: \E A Q x. all d.(Q(A(d)) -> A(d)(x))
  surf: as
  
## as_cl ##
- category: S/S
  semantics: \E X. X
  surf: as
  

### articles ###

- category: (S/(S\NP))/N
  semantics: \E F G. exists x. (F(x) & G(x)) 
  surf: a

- category: ((S\NP)\((S\NP)/N))/N
  semantics: \E N V . V(N) 
  surf: a

- category: ((S\NP)\((S\NP)/NP))/N
  semantics: \E F G z. exists x. (F(x) & G(\P. P(x),z)) 
  surf: a2

- category: N/N
  semantics: \E X. X 
  surf: a

- category: (((S\NP)/(S/(S\NP)))\((S\NP)/NP))/(((S\NP)/(S/(S\NP)))\((S\NP)/NP))
  semantics: \E X. X 
  surf: a

### quantifiers ###

#- category: S/(S\NP)
#  semantics: \E Q. all y.(_person(y) -> Q(y))
#  surf: everyone

- category: (S/(S\NP))/N
  semantics: \E N Q. all y.(N(y) -> Q(y))
  surf: every

- category: (S/(S\NP))/N
  semantics: \E N Q. all y.(N(y) -> Q(y))
  surf: all

#- category: S/(S\NP)
#  semantics: \E Q. all y.(_person(y) -> Q(y))
#  surf: anyone

- category: (S/(S\NP))/N
  semantics: \E N Q. all y.(N(y) -> Q(y))
  surf: any

#- category: S/(S\NP)
#  semantics: \E Q. exists y.(_person(y) & Q(y))
#  surf: someone

- category: (S/(S\NP))/N
  semantics: \E N Q. exists x. (N(x) & Q(x))
  surf: some

### verbs ###

- category: (S\NP)/NP
  semantics: \E P z. P(\y.E(z,y))

- category: (S\NP)/(S\NP)
  semantics: \E X. X
  surf: is

- category: (S\NP)/N
  semantics: \E F x. F(x)
  surf: is

- category: (S\NP)/N
  semantics: \E F x. F(x)
  surf: are

- category: (S\NP)/(S\NP)
  semantics: \E X. X
  surf: did

### adverbs ###

- category: D/D
  semantics: \E X. X
  surf: at_least

- category: ((NP/N)/((NP/N)\D))/D
  semantics: \E z G N F . all d. (exists x. (N(x) & F(x) & (G(d,x) <-> (d = z))))
  surf: exactly
  

### conjunctions ###

- category: ((S/(S\NP))/(S/(S\NP)))/(S/(S\NP))
  semantics: \E W K Q. (K(Q) & W(Q))
  surf: and

- category: ((S/(S\NP))/(S/(S\NP)))/(S/(S\NP))
  semantics: \E W K Q. (K(Q) | W(Q))
  surf: or


### adjectives ###

## affermative ##

- category: (S\NP)\D
  semantics: \E d x. E(x,d)

## many ##

- category: (NP/N)\D
  semantics: \E d x. E(x,d)

## predicative ##

- category: S\NP
  semantics: \E x. E(x)
  surf: four_legged

## privative ##

- category: N/N
  semantics: \E Q x. E(Q(x))
  surf: former


### numerals ##

- category: D
  semantics: \E. E

## cardinal ##

- category: D
  semantics: \E. 10
  surf: ten

- category: D
  semantics: \E. 11
  surf: eleven

- category: D
  semantics: \E. 20
  surf: twenty

## multicative ##
- category: D
  semantics: \E d. ($product(d,_2))
  surf: twice

### others ###

## units ##
- category: D\D
  semantics: \E X. X

- category: N/N
  semantics: \E F x. -F(x)
  surf: not

- category: .
  semantics: \E X. X
  surf: "."
